name: Publish to NPM

on:
    push:
        tags:
            - "v*"

permissions:
    id-token: write # Required for OIDC
    contents: write # Required for creating releases
    issues: write # Required for creating releases
    pull-requests: write # Required for creating releases

jobs:
    publish:
        runs-on: ubuntu-latest
        environment:
            name: npm-publish
            url: https://www.npmjs.com/package/supplier

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "lts/*"
                  registry-url: "https://registry.npmjs.org"

            - name: Install latest npm
              run: npm install -g npm@latest

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: latest

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build package
              run: pnpm run build --filter=supplier

            - name: Run tests
              run: pnpm test --filter=supplier

            - name: Generate changelog
              id: changelog
              run: |
                  CURRENT_TAG=$(git describe --tags --abbrev=0)
                  VERSION=${CURRENT_TAG#v}
                  PREVIOUS_TAG=$(git describe --tags --abbrev=0 $CURRENT_TAG^ 2>/dev/null || echo "")

                  if [ -z "$PREVIOUS_TAG" ]; then
                    CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse)
                  else
                    CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..$CURRENT_TAG --reverse)
                  fi

                  echo "# Changelog" > CHANGELOG.md
                  echo "" >> CHANGELOG.md
                  echo "## $CURRENT_TAG" >> CHANGELOG.md
                  echo "" >> CHANGELOG.md
                  echo "$CHANGELOG" >> CHANGELOG.md

                  # Use GitHub Actions multiline output syntax
                  echo "changelog<<EOF" >> $GITHUB_OUTPUT
                  cat CHANGELOG.md >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            - name: Bump version
              working-directory: ./packages/supplier
              run: |
                  CURRENT_TAG=$(git describe --tags --abbrev=0)
                  VERSION=${CURRENT_TAG#v}

                  # Checkout main branch to avoid detached HEAD
                  git checkout main

                  # Update package.json version
                  pnpm version $VERSION --no-git-tag-version

            - name: Publish to NPM
              working-directory: ./packages/supplier
              run: npm publish

            - name: Create Release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ github.ref }}
                  body: |
                      ${{ steps.changelog.outputs.changelog }}
                  draft: false
                  prerelease: false

            - name: Upload changelog artifact
              uses: actions/upload-artifact@v4
              with:
                  name: changelog
                  path: CHANGELOG.md

            - name: Commit version bump
              working-directory: ./packages/supplier
              run: |
                  CURRENT_TAG=$(git describe --tags --abbrev=0)
                  VERSION=${CURRENT_TAG#v}
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add package.json
                  git commit -m "chore: bump version to $VERSION [skip ci]"
                  git push origin main
