name: Deploy

on:
    release:
        types: [published]

concurrency:
    group: "deploy"
    cancel-in-progress: false

jobs:
    build:
        uses: ./.github/workflows/build.yml
    publish-pkg:
        needs: build
        environment:
            name: npm-publish
            url: https://www.npmjs.com/package/commodity
        runs-on: ubuntu-latest
        permissions:
            contents: write # Required for managing tags
            id-token: write # Required for OIDC with npm
        steps:
            - name: Checkout
              uses: actions/checkout@v5
              with:
                  fetch-tags: true

            - name: Setup Node.js
              uses: actions/setup-node@v5
              with:
                  node-version: "lts/*"
                  registry-url: "https://registry.npmjs.org"
                  package-manager-cache: false

            - name: Download build artifacts
              uses: actions/download-artifact@v5
              with:
                  name: commodity-build
                  path: packages/commodity

            - name: Set version from release tag
              working-directory: ./packages/commodity
              run: |
                  VERSION=${GITHUB_REF#refs/tags/}
                  VERSION=${VERSION#v}
                  npm version $VERSION --no-git-tag-version

            - name: Publish to Beta
              if: github.event.release.prerelease == 'true'
              working-directory: ./packages/commodity
              run: |
                  npm publish --tag beta

            - name: Publish to Latest
              if: github.event.release.prerelease == 'false'
              working-directory: ./packages/commodity
              run: |
                  npm publish --tag latest

            - name: Configure Git
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"

            - name: Manage latest-release tag (for stable releases)
              if: github.event.release.prerelease == 'false'
              run: |
                  git tag -d latest-release || true
                  git push origin :refs/tags/latest-release || true

                  git tag latest-release
                  git push origin latest-release

            - name: Manage latest-prerelease tag (for prereleases)
              if: github.event.release.prerelease == 'true'
              run: |
                  git tag -d latest-prerelease || true
                  git push origin :refs/tags/latest-prerelease || true

                  git tag latest-prerelease
                  git push origin latest-prerelease

    deploy-pages:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs:
            - build
            - publish-pkg
        permissions:
            contents: read
            pages: write # Required for deploying to GitHub Pages
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
