name: Deploy

on:
    release:
        types: [published]

concurrency:
    group: "deploy"
    cancel-in-progress: false

jobs:
    build:
        uses: ./.github/workflows/build.yml

    dry-run-check:
        runs-on: ubuntu-latest
        outputs:
            dry_run: ${{ steps.dry-run.outputs.dry_run }}
            is_dry_run: ${{ steps.dry-run.outputs.is_dry_run }}
        steps:
            - name: Set dry-run flag
              id: dry-run
              run: |
                  if [[ "${{ github.event.release.tag_name }}" == *"dry-run"* ]]; then
                      echo "dry_run=--dry-run" >> $GITHUB_OUTPUT
                      echo "is_dry_run=true" >> $GITHUB_OUTPUT
                  else
                      echo "dry_run=" >> $GITHUB_OUTPUT
                      echo "is_dry_run=false" >> $GITHUB_OUTPUT
                  fi

    publish-pkg:
        needs: [build, dry-run-check]
        environment:
            name: npm-publish
            url: https://www.npmjs.com/package/commodity
        runs-on: ubuntu-latest
        permissions:
            contents: write # Required for managing tags
            id-token: write # Required for OIDC with npm
        steps:
            - name: Checkout
              uses: actions/checkout@v5

            - name: Setup Node.js
              uses: actions/setup-node@v5
              with:
                  node-version: "lts/*"
                  registry-url: "https://registry.npmjs.org"
                  package-manager-cache: false

            - name: Update npm
              run: npm install -g npm@latest

            - name: Download build artifacts
              uses: actions/download-artifact@v5
              with:
                  name: commodity-build
                  path: packages/commodity

            - name: Set version from release tag
              working-directory: ./packages/commodity
              run: |
                  VERSION=${GITHUB_REF#refs/tags/}
                  VERSION=${VERSION#v}
                  echo "Setting version to: $VERSION"
                  npm version $VERSION --no-git-tag-version
                  echo "Package.json version is now: $(cat package.json | jq -r .version)"

            - name: Publish to Beta
              if: github.event.release.prerelease == true
              working-directory: ./packages/commodity
              run: |
                  npm publish --tag beta ${{ needs.dry-run-check.outputs.dry_run }}

            - name: Publish to Latest
              if: github.event.release.prerelease == false
              working-directory: ./packages/commodity
              run: |
                  npm publish --tag latest ${{ needs.dry-run-check.outputs.dry_run }}

            - name: Configure Git
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"

            - name: Manage latest-stable-release tag
              if: github.event.release.prerelease == false
              run: |
                  git tag -d latest-stable-release || true
                  git tag latest-stable-release
                  git push origin --tags --force

            - name: Manage latest-release tag
              run: |
                  git tag -d latest-release || true
                  git tag latest-release
                  git push origin --tags --force

    deploy-pages:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs:
            - build
            - publish-pkg
            - dry-run-check
        permissions:
            contents: read
            pages: write # Required for deploying to GitHub Pages
        steps:
            - name: Deploy to GitHub Pages
              if: needs.dry-run-check.outputs.is_dry_run == false
              id: deployment
              uses: actions/deploy-pages@v4

            - name: Dry run - Skip GitHub Pages deployment
              if: needs.dry-run-check.outputs.is_dry_run == true
              run: |
                  echo "ðŸš« Dry run: Skipping GitHub Pages deployment (release is draft)"
